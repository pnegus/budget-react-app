name: build
run-name: ${{ github.head_ref }}
on: [push]
jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: 
          sparse-checkout: 'BudgetingApp'

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache-dependency-path: ./BudgetingApp/package-lock.json

      - name: Install Node modules
        run: |
              npm ci
      
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node_modules-${{hashFiles('yarn.lock')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock

      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd BudgetingApp/android && chmod +x ./gradlew

      - name: Build Android
        run: |
              cd BudgetingApp/node_modules
              ls
              cd ../android && ./gradlew bundle --no-daemon

# npx react-native doctor
# cd BudgetingApp && npx react-native build-android --mode=release

      # Upload to Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: BudgetingApp.aab
          path: "BudgetingApp/android/app/build/outputs/bundle/release/app-release.aab"